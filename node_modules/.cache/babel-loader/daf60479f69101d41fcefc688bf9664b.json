{"ast":null,"code":"import configDB from '../../../data/customizer/config';\nconst primary = localStorage.getItem('default_color') || configDB.data.color.primary_color;\nconst secondary = localStorage.getItem('secondary_color') || configDB.data.color.secondary_color;\nexport const areaSpaline = {\n  series: [{\n    name: 'series1',\n    data: [31, 40, 28, 51, 42, 109, 100]\n  }, {\n    name: 'series2',\n    data: [11, 32, 45, 32, 34, 52, 41]\n  }],\n  options: {\n    chart: {\n      height: 350,\n      type: 'area'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: [primary, '#f10542'],\n    stroke: {\n      curve: 'smooth'\n    },\n    xaxis: {\n      type: 'datetime',\n      categories: [\"2018-09-19T00:00:00.000Z\", \"2018-09-19T01:30:00.000Z\", \"2018-09-19T02:30:00.000Z\", \"2018-09-19T03:30:00.000Z\", \"2018-09-19T04:30:00.000Z\", \"2018-09-19T05:30:00.000Z\", \"2018-09-19T06:30:00.000Z\"]\n    },\n    tooltip: {\n      x: {\n        format: 'dd/MM/yy HH:mm'\n      }\n    }\n  }\n}; // Apex Basic Area chart\n\nconst series = {\n  \"monthDataSeries1\": {\n    \"prices\": [8107.85, 8128.0, 8122.9, 8165.5, 8340.7, 8423.7, 8423.5, 8514.3, 8481.85, 8487.7, 8506.9, 8626.2, 8668.95, 8602.3, 8607.55, 8512.9, 8496.25, 8600.65, 8881.1, 9340.85],\n    \"dates\": [\"13 Nov 2017\", \"14 Nov 2017\", \"15 Nov 2017\", \"16 Nov 2017\", \"17 Nov 2017\", \"20 Nov 2017\", \"21 Nov 2017\", \"22 Nov 2017\", \"23 Nov 2017\", \"24 Nov 2017\", \"27 Nov 2017\", \"28 Nov 2017\", \"29 Nov 2017\", \"30 Nov 2017\", \"01 Dec 2017\", \"04 Dec 2017\", \"05 Dec 2017\", \"06 Dec 2017\", \"07 Dec 2017\", \"08 Dec 2017\"]\n  }\n};\nexport const apexAreaChart = {\n  series: [{\n    name: \"STOCK ABC\",\n    data: series.monthDataSeries1.prices\n  }],\n  options: {\n    chart: {\n      type: 'area',\n      height: 350,\n      zoom: {\n        enabled: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'straight'\n    },\n    title: {\n      text: 'Fundamental Analysis of Stocks',\n      align: 'left'\n    },\n    subtitle: {\n      text: 'Price Movements',\n      align: 'left'\n    },\n    colors: [primary],\n    labels: series.monthDataSeries1.dates,\n    xaxis: {\n      type: 'datetime'\n    },\n    yaxis: {\n      opposite: true\n    },\n    legend: {\n      horizontalAlign: 'left'\n    }\n  }\n};\nexport const apexColumnChartsone = {\n  series: [{\n    name: 'Net Profit',\n    data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\n  }, {\n    name: 'Revenue',\n    data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\n  }, {\n    name: 'Free Cash Flow',\n    data: [35, 41, 36, 26, 45, 48, 52, 53, 41]\n  }],\n  options: {\n    chart: {\n      type: 'bar',\n      height: 350\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '55%',\n        endingShape: 'rounded'\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: [primary, '#f10542', '#51bb25'],\n    stroke: {\n      show: true,\n      width: 2,\n      colors: ['transparent']\n    },\n    xaxis: {\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct']\n    },\n    yaxis: {\n      title: {\n        text: '$ (thousands)'\n      }\n    },\n    fill: {\n      opacity: 1\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return \"$ \" + val + \" thousands\";\n        }\n      }\n    }\n  }\n};\nexport const apexPieChart = {\n  series: [44, 55, 13, 43, 22],\n  options: {\n    chart: {\n      width: 380,\n      type: 'pie'\n    },\n    labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\n    colors: [primary, secondary, '#51bb25', '#544fff', '#fb740d'],\n    responsive: [{\n      breakpoint: 480,\n      options: {\n        chart: {\n          width: 200\n        },\n        legend: {\n          position: 'bottom'\n        }\n      }\n    }]\n  }\n};\n\nconst generateData = (baseval, count, yrange) => {\n  var i = 0;\n  var series = [];\n\n  while (i < count) {\n    var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n    var z = Math.floor(Math.random() * (75 - 15 + 1)) + 15;\n    series.push([baseval, y, z]);\n    baseval += 86400000;\n    i++;\n  }\n\n  return series;\n};\n\nexport const apex3DbubbleCharts = {\n  series: [{\n    name: 'Product1',\n    data: generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n      min: 10,\n      max: 60\n    })\n  }, {\n    name: 'Product2',\n    data: generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n      min: 10,\n      max: 60\n    })\n  }, {\n    name: 'Product3',\n    data: generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n      min: 10,\n      max: 60\n    })\n  }, {\n    name: 'Product4',\n    data: generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n      min: 10,\n      max: 60\n    })\n  }],\n  options: {\n    chart: {\n      height: 350,\n      type: 'bubble'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      type: 'gradient'\n    },\n    title: {\n      text: '3D Bubble Chart'\n    },\n    xaxis: {\n      tickAmount: 12,\n      type: 'datetime',\n      labels: {\n        rotate: 0\n      }\n    },\n    colors: [primary, secondary, '#51bb25', '#544fff'],\n    yaxis: {\n      max: 70\n    },\n    theme: {\n      palette: 'palette2'\n    }\n  }\n};\nexport const apexRadialBarChart = {\n  series: [44, 55, 67, 83],\n  options: {\n    chart: {\n      height: 350,\n      type: 'radialBar'\n    },\n    plotOptions: {\n      radialBar: {\n        dataLabels: {\n          name: {\n            fontSize: '22px'\n          },\n          value: {\n            fontSize: '16px'\n          },\n          total: {\n            show: true,\n            label: 'Total',\n            formatter: function (w) {\n              return 249;\n            }\n          }\n        }\n      }\n    },\n    labels: ['Apples', 'Oranges', 'Bananas', 'Berries'],\n    colors: [primary, secondary, '#51bb25', '#544fff']\n  }\n};\nexport const apexCandleStickCharts = {\n  series: [{\n    data: [{\n      x: new Date(1538778600000),\n      y: [6629.81, 6650.5, 6623.04, 6633.33]\n    }, {\n      x: new Date(1538780400000),\n      y: [6632.01, 6643.59, 6620, 6630.11]\n    }, {\n      x: new Date(1538782200000),\n      y: [6630.71, 6648.95, 6623.34, 6635.65]\n    }, {\n      x: new Date(1538784000000),\n      y: [6635.65, 6651, 6629.67, 6638.24]\n    }, {\n      x: new Date(1538785800000),\n      y: [6638.24, 6640, 6620, 6624.47]\n    }, {\n      x: new Date(1538787600000),\n      y: [6624.53, 6636.03, 6621.68, 6624.31]\n    }, {\n      x: new Date(1538789400000),\n      y: [6624.61, 6632.2, 6617, 6626.02]\n    }, {\n      x: new Date(1538791200000),\n      y: [6627, 6627.62, 6584.22, 6603.02]\n    }, {\n      x: new Date(1538793000000),\n      y: [6605, 6608.03, 6598.95, 6604.01]\n    }, {\n      x: new Date(1538794800000),\n      y: [6604.5, 6614.4, 6602.26, 6608.02]\n    }, {\n      x: new Date(1538796600000),\n      y: [6608.02, 6610.68, 6601.99, 6608.91]\n    }, {\n      x: new Date(1538798400000),\n      y: [6608.91, 6618.99, 6608.01, 6612]\n    }, {\n      x: new Date(1538800200000),\n      y: [6612, 6615.13, 6605.09, 6612]\n    }, {\n      x: new Date(1538802000000),\n      y: [6612, 6624.12, 6608.43, 6622.95]\n    }, {\n      x: new Date(1538803800000),\n      y: [6623.91, 6623.91, 6615, 6615.67]\n    }, {\n      x: new Date(1538805600000),\n      y: [6618.69, 6618.74, 6610, 6610.4]\n    }, {\n      x: new Date(1538807400000),\n      y: [6611, 6622.78, 6610.4, 6614.9]\n    }, {\n      x: new Date(1538809200000),\n      y: [6614.9, 6626.2, 6613.33, 6623.45]\n    }, {\n      x: new Date(1538811000000),\n      y: [6623.48, 6627, 6618.38, 6620.35]\n    }, {\n      x: new Date(1538812800000),\n      y: [6619.43, 6620.35, 6610.05, 6615.53]\n    }, {\n      x: new Date(1538814600000),\n      y: [6615.53, 6617.93, 6610, 6615.19]\n    }, {\n      x: new Date(1538816400000),\n      y: [6615.19, 6621.6, 6608.2, 6620]\n    }, {\n      x: new Date(1538818200000),\n      y: [6619.54, 6625.17, 6614.15, 6620]\n    }, {\n      x: new Date(1538820000000),\n      y: [6620.33, 6634.15, 6617.24, 6624.61]\n    }, {\n      x: new Date(1538821800000),\n      y: [6625.95, 6626, 6611.66, 6617.58]\n    }, {\n      x: new Date(1538823600000),\n      y: [6619, 6625.97, 6595.27, 6598.86]\n    }, {\n      x: new Date(1538825400000),\n      y: [6598.86, 6598.88, 6570, 6587.16]\n    }, {\n      x: new Date(1538827200000),\n      y: [6588.86, 6600, 6580, 6593.4]\n    }, {\n      x: new Date(1538829000000),\n      y: [6593.99, 6598.89, 6585, 6587.81]\n    }, {\n      x: new Date(1538830800000),\n      y: [6587.81, 6592.73, 6567.14, 6578]\n    }, {\n      x: new Date(1538832600000),\n      y: [6578.35, 6581.72, 6567.39, 6579]\n    }, {\n      x: new Date(1538834400000),\n      y: [6579.38, 6580.92, 6566.77, 6575.96]\n    }, {\n      x: new Date(1538836200000),\n      y: [6575.96, 6589, 6571.77, 6588.92]\n    }, {\n      x: new Date(1538838000000),\n      y: [6588.92, 6594, 6577.55, 6589.22]\n    }, {\n      x: new Date(1538839800000),\n      y: [6589.3, 6598.89, 6589.1, 6596.08]\n    }, {\n      x: new Date(1538841600000),\n      y: [6597.5, 6600, 6588.39, 6596.25]\n    }, {\n      x: new Date(1538843400000),\n      y: [6598.03, 6600, 6588.73, 6595.97]\n    }, {\n      x: new Date(1538845200000),\n      y: [6595.97, 6602.01, 6588.17, 6602]\n    }, {\n      x: new Date(1538847000000),\n      y: [6602, 6607, 6596.51, 6599.95]\n    }, {\n      x: new Date(1538848800000),\n      y: [6600.63, 6601.21, 6590.39, 6591.02]\n    }, {\n      x: new Date(1538850600000),\n      y: [6591.02, 6603.08, 6591, 6591]\n    }, {\n      x: new Date(1538852400000),\n      y: [6591, 6601.32, 6585, 6592]\n    }, {\n      x: new Date(1538854200000),\n      y: [6593.13, 6596.01, 6590, 6593.34]\n    }, {\n      x: new Date(1538856000000),\n      y: [6593.34, 6604.76, 6582.63, 6593.86]\n    }, {\n      x: new Date(1538857800000),\n      y: [6593.86, 6604.28, 6586.57, 6600.01]\n    }, {\n      x: new Date(1538859600000),\n      y: [6601.81, 6603.21, 6592.78, 6596.25]\n    }, {\n      x: new Date(1538861400000),\n      y: [6596.25, 6604.2, 6590, 6602.99]\n    }, {\n      x: new Date(1538863200000),\n      y: [6602.99, 6606, 6584.99, 6587.81]\n    }, {\n      x: new Date(1538865000000),\n      y: [6587.81, 6595, 6583.27, 6591.96]\n    }, {\n      x: new Date(1538866800000),\n      y: [6591.97, 6596.07, 6585, 6588.39]\n    }, {\n      x: new Date(1538868600000),\n      y: [6587.6, 6598.21, 6587.6, 6594.27]\n    }, {\n      x: new Date(1538870400000),\n      y: [6596.44, 6601, 6590, 6596.55]\n    }, {\n      x: new Date(1538872200000),\n      y: [6598.91, 6605, 6596.61, 6600.02]\n    }, {\n      x: new Date(1538874000000),\n      y: [6600.55, 6605, 6589.14, 6593.01]\n    }, {\n      x: new Date(1538875800000),\n      y: [6593.15, 6605, 6592, 6603.06]\n    }, {\n      x: new Date(1538877600000),\n      y: [6603.07, 6604.5, 6599.09, 6603.89]\n    }, {\n      x: new Date(1538879400000),\n      y: [6604.44, 6604.44, 6600, 6603.5]\n    }, {\n      x: new Date(1538881200000),\n      y: [6603.5, 6603.99, 6597.5, 6603.86]\n    }, {\n      x: new Date(1538883000000),\n      y: [6603.85, 6605, 6600, 6604.07]\n    }, {\n      x: new Date(1538884800000),\n      y: [6604.98, 6606, 6604.07, 6606]\n    }]\n  }],\n  options: {\n    plotOptions: {\n      candlestick: {\n        colors: {\n          upward: primary,\n          downward: secondary\n        }\n      }\n    },\n    chart: {\n      type: 'candlestick',\n      height: 350\n    },\n    title: {\n      text: 'CandleStick Chart',\n      align: 'left'\n    },\n    xaxis: {\n      type: 'datetime'\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true\n      }\n    }\n  }\n};\nexport const apexRadarPolygonfillCharts = {\n  series: [{\n    name: 'Series 1',\n    data: [20, 100, 40, 30, 50, 80, 33]\n  }],\n  options: {\n    chart: {\n      height: 350,\n      type: 'radar'\n    },\n    dataLabels: {\n      enabled: true\n    },\n    plotOptions: {\n      radar: {\n        size: 140,\n        polygons: {\n          strokeColor: '#e9e9e9',\n          fill: {\n            colors: ['#f8f8f8', '#fff']\n          }\n        }\n      }\n    },\n    title: {\n      text: 'Radar with Polygon Fill'\n    },\n    colors: [secondary],\n    markers: {\n      size: 4,\n      colors: ['#fff'],\n      strokeColor: secondary,\n      strokeWidth: 2\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return val;\n        }\n      }\n    },\n    xaxis: {\n      categories: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n    },\n    yaxis: {\n      tickAmount: 7,\n      labels: {\n        formatter: function (val, i) {\n          if (i % 2 === 0) {\n            return val;\n          } else {\n            return '';\n          }\n        }\n      }\n    }\n  }\n};\nexport const apexSteplineChart = {\n  series: [{\n    data: [34, 44, 54, 21, 12, 43, 33, 23, 66, 66, 58]\n  }],\n  options: {\n    chart: {\n      type: 'line',\n      height: 350\n    },\n    stroke: {\n      curve: 'stepline'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    title: {\n      text: 'Stepline Chart',\n      align: 'left'\n    },\n    colors: [primary],\n    markers: {\n      hover: {\n        sizeOffset: 4\n      }\n    }\n  }\n};\nexport const apexLineWithAnnotationCharts = {\n  series: [{\n    data: [['13 Nov 2017', 8107.85], [\"14 Nov 2017\", 8128], [\"15 Nov 2017\", 8122.9], ['16 Nov 2017', 8165.5], [\"17 Nov 2017\", 8340.7], [\"20 Nov 2017\", 8423.7], [\"21 Nov 2017\", 8423.5], [\"22 Nov 2017\", 8514.3], [\"23 Nov 2017\", 8481.85], [\"24 Nov 2017\", 8487.7], [\"27 Nov 2017\", 8506.9], [\"28 Nov 2017\", 8626.2], [\"29 Nov 2017\", 8668.95], [\"30 Nov 2017\", 8602.3], [\"01 Dec 2017\", 8607.55], [\"04 Dec 2017\", 8512.9], [\"05 Dec 2017\", 8496.25], [\"06 Dec 2017\", 8600.65], [\"07 Dec 2017\", 8881.1], [\"08 Dec 2017\", 9340.85]]\n  }],\n  options: {\n    chart: {\n      height: 350,\n      type: 'line',\n      id: 'areachart-2'\n    },\n    annotations: {\n      yaxis: [{\n        y: 8200,\n        borderColor: '#00E396',\n        label: {\n          borderColor: '#00E396',\n          style: {\n            color: '#fff',\n            background: '#00E396'\n          },\n          text: 'Support'\n        }\n      }, {\n        y: 8600,\n        y2: 9000,\n        borderColor: '#000',\n        fillColor: '#FEB019',\n        opacity: 0.2,\n        label: {\n          borderColor: '#333',\n          style: {\n            fontSize: '10px',\n            color: '#333',\n            background: '#FEB019'\n          },\n          text: 'Y-axis range'\n        }\n      }],\n      xaxis: [{\n        x: new Date('23 Nov 2017').getTime(),\n        strokeDashArray: 0,\n        borderColor: '#775DD0',\n        label: {\n          borderColor: '#775DD0',\n          style: {\n            color: '#fff',\n            background: '#775DD0'\n          },\n          text: 'Anno Test'\n        }\n      }, {\n        x: new Date('26 Nov 2017').getTime(),\n        x2: new Date('28 Nov 2017').getTime(),\n        fillColor: '#B3F7CA',\n        opacity: 0.4,\n        label: {\n          borderColor: '#B3F7CA',\n          style: {\n            fontSize: '10px',\n            color: '#fff',\n            background: '#00E396'\n          },\n          offsetY: -10,\n          text: 'X-axis range'\n        }\n      }],\n      points: [{\n        x: new Date('01 Dec 2017').getTime(),\n        y: 8607.55,\n        marker: {\n          size: 8,\n          fillColor: '#fff',\n          strokeColor: 'red',\n          radius: 2,\n          cssClass: 'apexcharts-custom-class'\n        },\n        label: {\n          borderColor: '#FF4560',\n          offsetY: 0,\n          style: {\n            color: '#fff',\n            background: '#FF4560'\n          },\n          text: 'Point Annotation'\n        }\n      }]\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'straight'\n    },\n    grid: {\n      padding: {\n        right: 30,\n        left: 20\n      }\n    },\n    title: {\n      text: 'Line with Annotations',\n      align: 'left'\n    },\n    colors: [primary],\n    labels: [\"13 Nov\", \"16 Nov\", \"19 Nov\", \"22 Nov\", \"25 Nov\", \"28 Nov\", \"Dec 17\", \"05 Dec\"],\n    xaxis: {\n      type: 'datetime'\n    }\n  }\n};\nexport const apexDonutCharts = {\n  series: [44, 55, 41, 17, 15],\n  options: {\n    chart: {\n      type: 'donut'\n    },\n    colors: [primary, secondary, '#51bb25', '#544fff', '#fb740d'],\n    responsive: [{\n      breakpoint: 480,\n      options: {\n        chart: {\n          width: 300\n        },\n        legend: {\n          position: 'bottom'\n        }\n      }\n    }]\n  }\n};\nexport const apexMixedCharts = {\n  series: [{\n    name: 'Column',\n    type: 'column',\n    data: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30]\n  }, {\n    name: 'Area',\n    type: 'area',\n    data: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43]\n  }, {\n    name: 'Line',\n    type: 'line',\n    data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]\n  }],\n  options: {\n    chart: {\n      height: 350,\n      type: 'line',\n      stacked: false\n    },\n    stroke: {\n      width: [0, 2, 5],\n      curve: 'smooth'\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: '50%'\n      }\n    },\n    fill: {\n      opacity: [0.85, 0.25, 1],\n      gradient: {\n        inverseColors: false,\n        shade: 'light',\n        type: \"vertical\",\n        opacityFrom: 0.85,\n        opacityTo: 0.55,\n        stops: [0, 100, 100, 100]\n      }\n    },\n    labels: ['01/01/2003', '02/01/2003', '03/01/2003', '04/01/2003', '05/01/2003', '06/01/2003', '07/01/2003', '08/01/2003', '09/01/2003', '10/01/2003', '11/01/2003'],\n    markers: {\n      size: 0\n    },\n    xaxis: {\n      type: 'datetime'\n    },\n    colors: [primary, '#51bb25', secondary],\n    yaxis: {\n      title: {\n        text: 'Points'\n      },\n      min: 0\n    },\n    tooltip: {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: function (y) {\n          if (typeof y !== \"undefined\") {\n            return y.toFixed(0) + \" points\";\n          }\n\n          return y;\n        }\n      }\n    }\n  }\n};\nexport const apexBarChart = {\n  series: [{\n    data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380]\n  }],\n  options: {\n    chart: {\n      type: 'bar',\n      height: 350\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: [primary],\n    xaxis: {\n      categories: ['South Korea', 'Canada', 'United Kingdom', 'Netherlands', 'Italy', 'France', 'Japan', 'United States', 'China', 'Germany']\n    }\n  }\n};","map":{"version":3,"sources":["/home/sonali/Downloads/react/theme/src/components/charts/apexCharts/apexData.jsx"],"names":["configDB","primary","localStorage","getItem","data","color","primary_color","secondary","secondary_color","areaSpaline","series","name","options","chart","height","type","dataLabels","enabled","colors","stroke","curve","xaxis","categories","tooltip","x","format","apexAreaChart","monthDataSeries1","prices","zoom","title","text","align","subtitle","labels","dates","yaxis","opposite","legend","horizontalAlign","apexColumnChartsone","plotOptions","bar","horizontal","columnWidth","endingShape","show","width","fill","opacity","y","formatter","val","apexPieChart","responsive","breakpoint","position","generateData","baseval","count","yrange","i","Math","floor","random","max","min","z","push","apex3DbubbleCharts","Date","getTime","tickAmount","rotate","theme","palette","apexRadialBarChart","radialBar","fontSize","value","total","label","w","apexCandleStickCharts","candlestick","upward","downward","apexRadarPolygonfillCharts","radar","size","polygons","strokeColor","markers","strokeWidth","apexSteplineChart","hover","sizeOffset","apexLineWithAnnotationCharts","id","annotations","borderColor","style","background","y2","fillColor","strokeDashArray","x2","offsetY","points","marker","radius","cssClass","grid","padding","right","left","apexDonutCharts","apexMixedCharts","stacked","gradient","inverseColors","shade","opacityFrom","opacityTo","stops","shared","intersect","toFixed","apexBarChart"],"mappings":"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","sourcesContent":["import configDB from '../../../data/customizer/config'\nconst primary = localStorage.getItem('default_color') || configDB.data.color.primary_color;\nconst secondary = localStorage.getItem('secondary_color') || configDB.data.color.secondary_color;\n\nexport const areaSpaline = {\n        series: [{\n          name: 'series1',\n          data: [31, 40, 28, 51, 42, 109, 100]\n        }, {\n          name: 'series2',\n          data: [11, 32, 45, 32, 34, 52, 41]\n        }],\n        options: {\n          chart: {\n            height: 350,\n            type: 'area'\n          },\n          dataLabels: {\n            enabled: false\n          },\n          colors:[primary, '#f10542'],\n          stroke: {\n            curve: 'smooth'\n          },\n          xaxis: {\n            type: 'datetime',\n            categories: [\"2018-09-19T00:00:00.000Z\", \"2018-09-19T01:30:00.000Z\", \"2018-09-19T02:30:00.000Z\", \"2018-09-19T03:30:00.000Z\", \"2018-09-19T04:30:00.000Z\", \"2018-09-19T05:30:00.000Z\", \"2018-09-19T06:30:00.000Z\"]\n          },\n          tooltip: {\n            x: {\n              format: 'dd/MM/yy HH:mm'\n            },\n          },\n      },\n\n}\n\n// Apex Basic Area chart\n\nconst series = \n{\n  \"monthDataSeries1\": {\n    \"prices\": [\n      8107.85,\n      8128.0,\n      8122.9,\n      8165.5,\n      8340.7,\n      8423.7,\n      8423.5,\n      8514.3,\n      8481.85,\n      8487.7,\n      8506.9,\n      8626.2,\n      8668.95,\n      8602.3,\n      8607.55,\n      8512.9,\n      8496.25,\n      8600.65,\n      8881.1,\n      9340.85\n    ],\n    \"dates\": [\n      \"13 Nov 2017\",\n      \"14 Nov 2017\",\n      \"15 Nov 2017\",\n      \"16 Nov 2017\",\n      \"17 Nov 2017\",\n      \"20 Nov 2017\",\n      \"21 Nov 2017\",\n      \"22 Nov 2017\",\n      \"23 Nov 2017\",\n      \"24 Nov 2017\",\n      \"27 Nov 2017\",\n      \"28 Nov 2017\",\n      \"29 Nov 2017\",\n      \"30 Nov 2017\",\n      \"01 Dec 2017\",\n      \"04 Dec 2017\",\n      \"05 Dec 2017\",\n      \"06 Dec 2017\",\n      \"07 Dec 2017\",\n      \"08 Dec 2017\"\n    ]\n  },\n}\nexport const apexAreaChart = {\n  series: [{\n    name: \"STOCK ABC\",\n    data: series.monthDataSeries1.prices\n  }],\n  options: {\n    chart: {\n      type: 'area',\n      height: 350,\n      zoom: {\n        enabled: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'straight'\n    },\n    \n    title: {\n      text: 'Fundamental Analysis of Stocks',\n      align: 'left'\n    },\n    subtitle: {\n      text: 'Price Movements',\n      align: 'left'\n    },\n    colors:[primary],\n    labels: series.monthDataSeries1.dates,\n    xaxis: {\n      type: 'datetime',\n    },\n    yaxis: {\n      opposite: true\n    },\n    legend: {\n      horizontalAlign: 'left'\n    }\n  },\n\n\n};\n\nexport const apexColumnChartsone = {\n\n    series: [{\n        name: 'Net Profit',\n        data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\n      }, {\n        name: 'Revenue',\n        data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\n      }, {\n        name: 'Free Cash Flow',\n        data: [35, 41, 36, 26, 45, 48, 52, 53, 41]\n      }],\n      options: {\n        chart: {\n          type: 'bar',\n          height: 350\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: '55%',\n            endingShape: 'rounded'\n          },\n        },\n        dataLabels: {\n          enabled: false\n        },\n        colors:[primary, '#f10542', '#51bb25'],\n        stroke: {\n          show: true,\n          width: 2,\n          colors: ['transparent']\n        },\n        xaxis: {\n          categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n        },\n        yaxis: {\n          title: {\n            text: '$ (thousands)'\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        tooltip: {\n          y: {\n            formatter: function (val) {\n              return \"$ \" + val + \" thousands\"\n            }\n          }\n        }\n      },\n    \n    \n    };\n\n\nexport const apexPieChart = {\n\n        series: [44, 55, 13, 43, 22],\n                options: {\n                chart: {\n                    width: 380,\n                    type: 'pie',\n                },\n                labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\n                colors:[primary, secondary, '#51bb25', '#544fff', '#fb740d'],\n                responsive: [{\n                    breakpoint: 480,\n                    options: {\n                    chart: {\n                        width: 200\n                    },\n                    legend: {\n                        position: 'bottom'\n                    }\n                    }\n                }]\n                },  \n        }\n  const generateData = (baseval, count, yrange) => {\n    var i = 0;\n    var series = [];\n    while (i < count) {\n        var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n        var z = Math.floor(Math.random() * (75 - 15 + 1)) + 15;\n\n        series.push([baseval, y, z]);\n        baseval += 86400000;\n        i++;\n    }\n    return series;\n}\n    \nexport const apex3DbubbleCharts = {\n  series: [{\n    name: 'Product1',\n    data: generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n      min: 10,\n      max: 60\n    })\n  },\n  {\n    name: 'Product2',\n    data: generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n      min: 10,\n      max: 60\n    })\n  },\n  {\n    name: 'Product3',\n    data: generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n      min: 10,\n      max: 60\n    })\n  },\n  {\n    name: 'Product4',\n    data: generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n      min: 10,\n      max: 60\n    })\n  }],\n  options: {\n    chart: {\n      height: 350,\n      type: 'bubble',\n    },\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      type: 'gradient',\n    },\n    title: {\n      text: '3D Bubble Chart'\n    },\n    xaxis: {\n      tickAmount: 12,\n      type: 'datetime',\n      labels: {\n          rotate: 0,\n      }\n    },\n    colors:[primary, secondary, '#51bb25', '#544fff'],\n    yaxis: {\n      max: 70\n    },\n    theme: {\n      palette: 'palette2'\n    }\n  },\n\n\n};\n\n\n\nexport const apexRadialBarChart = {\n    series: [44, 55, 67, 83],\n    options: {\n      chart: {\n        height: 350,\n        type: 'radialBar',\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              fontSize: '22px',\n            },\n            value: {\n              fontSize: '16px',\n            },\n            total: {\n              show: true,\n              label: 'Total',\n              formatter: function (w) {\n                return 249\n              }\n            }\n          }\n        }\n      },\n      labels: ['Apples', 'Oranges', 'Bananas', 'Berries'],\n      colors:[primary, secondary, '#51bb25', '#544fff'],\n    },\n  \n  }\n\n  export const apexCandleStickCharts = {\n    series: [{\n        data: [{\n            x: new Date(1538778600000),\n            y: [6629.81, 6650.5, 6623.04, 6633.33]\n          },\n          {\n            x: new Date(1538780400000),\n            y: [6632.01, 6643.59, 6620, 6630.11]\n          },\n          {\n            x: new Date(1538782200000),\n            y: [6630.71, 6648.95, 6623.34, 6635.65]\n          },\n          {\n            x: new Date(1538784000000),\n            y: [6635.65, 6651, 6629.67, 6638.24]\n          },\n          {\n            x: new Date(1538785800000),\n            y: [6638.24, 6640, 6620, 6624.47]\n          },\n          {\n            x: new Date(1538787600000),\n            y: [6624.53, 6636.03, 6621.68, 6624.31]\n          },\n          {\n            x: new Date(1538789400000),\n            y: [6624.61, 6632.2, 6617, 6626.02]\n          },\n          {\n            x: new Date(1538791200000),\n            y: [6627, 6627.62, 6584.22, 6603.02]\n          },\n          {\n            x: new Date(1538793000000),\n            y: [6605, 6608.03, 6598.95, 6604.01]\n          },\n          {\n            x: new Date(1538794800000),\n            y: [6604.5, 6614.4, 6602.26, 6608.02]\n          },\n          {\n            x: new Date(1538796600000),\n            y: [6608.02, 6610.68, 6601.99, 6608.91]\n          },\n          {\n            x: new Date(1538798400000),\n            y: [6608.91, 6618.99, 6608.01, 6612]\n          },\n          {\n            x: new Date(1538800200000),\n            y: [6612, 6615.13, 6605.09, 6612]\n          },\n          {\n            x: new Date(1538802000000),\n            y: [6612, 6624.12, 6608.43, 6622.95]\n          },\n          {\n            x: new Date(1538803800000),\n            y: [6623.91, 6623.91, 6615, 6615.67]\n          },\n          {\n            x: new Date(1538805600000),\n            y: [6618.69, 6618.74, 6610, 6610.4]\n          },\n          {\n            x: new Date(1538807400000),\n            y: [6611, 6622.78, 6610.4, 6614.9]\n          },\n          {\n            x: new Date(1538809200000),\n            y: [6614.9, 6626.2, 6613.33, 6623.45]\n          },\n          {\n            x: new Date(1538811000000),\n            y: [6623.48, 6627, 6618.38, 6620.35]\n          },\n          {\n            x: new Date(1538812800000),\n            y: [6619.43, 6620.35, 6610.05, 6615.53]\n          },\n          {\n            x: new Date(1538814600000),\n            y: [6615.53, 6617.93, 6610, 6615.19]\n          },\n          {\n            x: new Date(1538816400000),\n            y: [6615.19, 6621.6, 6608.2, 6620]\n          },\n          {\n            x: new Date(1538818200000),\n            y: [6619.54, 6625.17, 6614.15, 6620]\n          },\n          {\n            x: new Date(1538820000000),\n            y: [6620.33, 6634.15, 6617.24, 6624.61]\n          },\n          {\n            x: new Date(1538821800000),\n            y: [6625.95, 6626, 6611.66, 6617.58]\n          },\n          {\n            x: new Date(1538823600000),\n            y: [6619, 6625.97, 6595.27, 6598.86]\n          },\n          {\n            x: new Date(1538825400000),\n            y: [6598.86, 6598.88, 6570, 6587.16]\n          },\n          {\n            x: new Date(1538827200000),\n            y: [6588.86, 6600, 6580, 6593.4]\n          },\n          {\n            x: new Date(1538829000000),\n            y: [6593.99, 6598.89, 6585, 6587.81]\n          },\n          {\n            x: new Date(1538830800000),\n            y: [6587.81, 6592.73, 6567.14, 6578]\n          },\n          {\n            x: new Date(1538832600000),\n            y: [6578.35, 6581.72, 6567.39, 6579]\n          },\n          {\n            x: new Date(1538834400000),\n            y: [6579.38, 6580.92, 6566.77, 6575.96]\n          },\n          {\n            x: new Date(1538836200000),\n            y: [6575.96, 6589, 6571.77, 6588.92]\n          },\n          {\n            x: new Date(1538838000000),\n            y: [6588.92, 6594, 6577.55, 6589.22]\n          },\n          {\n            x: new Date(1538839800000),\n            y: [6589.3, 6598.89, 6589.1, 6596.08]\n          },\n          {\n            x: new Date(1538841600000),\n            y: [6597.5, 6600, 6588.39, 6596.25]\n          },\n          {\n            x: new Date(1538843400000),\n            y: [6598.03, 6600, 6588.73, 6595.97]\n          },\n          {\n            x: new Date(1538845200000),\n            y: [6595.97, 6602.01, 6588.17, 6602]\n          },\n          {\n            x: new Date(1538847000000),\n            y: [6602, 6607, 6596.51, 6599.95]\n          },\n          {\n            x: new Date(1538848800000),\n            y: [6600.63, 6601.21, 6590.39, 6591.02]\n          },\n          {\n            x: new Date(1538850600000),\n            y: [6591.02, 6603.08, 6591, 6591]\n          },\n          {\n            x: new Date(1538852400000),\n            y: [6591, 6601.32, 6585, 6592]\n          },\n          {\n            x: new Date(1538854200000),\n            y: [6593.13, 6596.01, 6590, 6593.34]\n          },\n          {\n            x: new Date(1538856000000),\n            y: [6593.34, 6604.76, 6582.63, 6593.86]\n          },\n          {\n            x: new Date(1538857800000),\n            y: [6593.86, 6604.28, 6586.57, 6600.01]\n          },\n          {\n            x: new Date(1538859600000),\n            y: [6601.81, 6603.21, 6592.78, 6596.25]\n          },\n          {\n            x: new Date(1538861400000),\n            y: [6596.25, 6604.2, 6590, 6602.99]\n          },\n          {\n            x: new Date(1538863200000),\n            y: [6602.99, 6606, 6584.99, 6587.81]\n          },\n          {\n            x: new Date(1538865000000),\n            y: [6587.81, 6595, 6583.27, 6591.96]\n          },\n          {\n            x: new Date(1538866800000),\n            y: [6591.97, 6596.07, 6585, 6588.39]\n          },\n          {\n            x: new Date(1538868600000),\n            y: [6587.6, 6598.21, 6587.6, 6594.27]\n          },\n          {\n            x: new Date(1538870400000),\n            y: [6596.44, 6601, 6590, 6596.55]\n          },\n          {\n            x: new Date(1538872200000),\n            y: [6598.91, 6605, 6596.61, 6600.02]\n          },\n          {\n            x: new Date(1538874000000),\n            y: [6600.55, 6605, 6589.14, 6593.01]\n          },\n          {\n            x: new Date(1538875800000),\n            y: [6593.15, 6605, 6592, 6603.06]\n          },\n          {\n            x: new Date(1538877600000),\n            y: [6603.07, 6604.5, 6599.09, 6603.89]\n          },\n          {\n            x: new Date(1538879400000),\n            y: [6604.44, 6604.44, 6600, 6603.5]\n          },\n          {\n            x: new Date(1538881200000),\n            y: [6603.5, 6603.99, 6597.5, 6603.86]\n          },\n          {\n            x: new Date(1538883000000),\n            y: [6603.85, 6605, 6600, 6604.07]\n          },\n          {\n            x: new Date(1538884800000),\n            y: [6604.98, 6606, 6604.07, 6606]\n          },\n        ]\n      }],\n      options: {\n        plotOptions: {\n          candlestick: {\n              colors: {\n                upward: primary,\n                downward: secondary\n              }\n          }\n        },\n        chart: {\n          type: 'candlestick',\n          height: 350\n        },\n        title: {\n          text: 'CandleStick Chart',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'datetime'\n        },\n        yaxis: {\n          tooltip: {\n            enabled: true\n          }\n        }\n      },\n}\nexport const apexRadarPolygonfillCharts = {\n    series: [{\n        name: 'Series 1',\n        data: [20, 100, 40, 30, 50, 80, 33],\n      }],\n      options: {\n        chart: {\n          height: 350,\n          type: 'radar',\n        },\n        dataLabels: {\n          enabled: true\n        },\n        plotOptions: {\n          radar: {\n            size: 140,\n            polygons: {\n              strokeColor: '#e9e9e9',\n              fill: {\n                colors: ['#f8f8f8', '#fff']\n              }\n            }\n          }\n        },\n        title: {\n          text: 'Radar with Polygon Fill'\n        },\n        colors: [secondary],\n        markers: {\n          size: 4,\n          colors: ['#fff'],\n          strokeColor: secondary,\n          strokeWidth: 2,\n        },\n        tooltip: {\n          y: {\n            formatter: function(val) {\n              return val\n            }\n          }\n        },\n        xaxis: {\n          categories: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n        },\n        yaxis: {\n          tickAmount: 7,\n          labels: {\n            formatter: function(val, i) {\n              if (i % 2 === 0) {\n                return val\n              } else {\n                return ''\n              }\n            }\n          }\n        }\n      },\n}\n\nexport const apexSteplineChart = {\n    series: [{\n        data: [34, 44, 54, 21, 12, 43, 33, 23, 66, 66, 58]\n      }],\n      options: {\n        chart: {\n          type: 'line',\n          height: 350\n        },\n        stroke: {\n          curve: 'stepline',\n        },\n        dataLabels: {\n          enabled: false\n        },\n        title: {\n          text: 'Stepline Chart',\n          align: 'left'\n        },\n        colors: [primary],\n        markers: {\n          hover: {\n            sizeOffset: 4\n          }\n        }\n      },\n    }\nexport const apexLineWithAnnotationCharts = {\n    series: [{\n        data:  [\n          ['13 Nov 2017',8107.85],\n          [\"14 Nov 2017\",8128],\n          [\"15 Nov 2017\",8122.9],\n          ['16 Nov 2017',8165.5],\n          [\"17 Nov 2017\",8340.7],\n          [\"20 Nov 2017\",8423.7],\n          [\"21 Nov 2017\",8423.5],\n          [\"22 Nov 2017\",8514.3],\n          [\"23 Nov 2017\",8481.85],\n          [\"24 Nov 2017\",8487.7],\n          [\"27 Nov 2017\",8506.9],\n          [\"28 Nov 2017\",8626.2],\n          [\"29 Nov 2017\",8668.95],\n          [\"30 Nov 2017\",8602.3],\n          [\"01 Dec 2017\",8607.55],\n          [\"04 Dec 2017\",8512.9],\n          [\"05 Dec 2017\",8496.25],\n          [\"06 Dec 2017\",8600.65],\n          [\"07 Dec 2017\",8881.1],\n          [\"08 Dec 2017\",9340.85]\n        ]\n      }],\n      options: {\n        chart: {\n          height: 350,\n          type: 'line',\n          id: 'areachart-2'\n        },\n        annotations: {\n          yaxis: [{\n            y: 8200,\n            borderColor: '#00E396',\n            label: {\n              borderColor: '#00E396',\n              style: {\n                color: '#fff',\n                background: '#00E396',\n              },\n              text: 'Support',\n            }\n          }, {\n            y: 8600,\n            y2: 9000,\n            borderColor: '#000',\n            fillColor: '#FEB019',\n            opacity: 0.2,\n            label: {\n              borderColor: '#333',\n              style: {\n                fontSize: '10px',\n                color: '#333',\n                background: '#FEB019',\n              },\n              text: 'Y-axis range',\n            }\n          }],\n          xaxis: [{\n            x: new Date('23 Nov 2017').getTime(),\n            strokeDashArray: 0,\n            borderColor: '#775DD0',\n            label: {\n              borderColor: '#775DD0',\n              style: {\n                color: '#fff',\n                background: '#775DD0',\n              },\n              text: 'Anno Test',\n            }\n          }, {\n            x: new Date('26 Nov 2017').getTime(),\n            x2: new Date('28 Nov 2017').getTime(),\n            fillColor: '#B3F7CA',\n            opacity: 0.4,\n            label: {\n              borderColor: '#B3F7CA',\n              style: {\n                fontSize: '10px',\n                color: '#fff',\n                background: '#00E396',\n              },\n              offsetY: -10,\n              text: 'X-axis range',\n            }\n          }],\n          points: [{\n            x: new Date('01 Dec 2017').getTime(),\n            y: 8607.55,\n            marker: {\n              size: 8,\n              fillColor: '#fff',\n              strokeColor: 'red',\n              radius: 2,\n              cssClass: 'apexcharts-custom-class'\n            },\n            label: {\n              borderColor: '#FF4560',\n              offsetY: 0,\n              style: {\n                color: '#fff',\n                background: '#FF4560',\n              },\n        \n              text: 'Point Annotation',\n            }\n          }]\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'straight'\n        },\n        grid: {\n          padding: {\n            right: 30,\n            left: 20\n          }\n        },\n        title: {\n          text: 'Line with Annotations',\n          align: 'left'\n        },\n        colors:[primary],\n        labels: [\"13 Nov\",\"16 Nov\",\"19 Nov\",\"22 Nov\",\"25 Nov\",\"28 Nov\",\"Dec 17\",\"05 Dec\"],\n        xaxis: {\n          type: 'datetime',\n        },\n      },\n}\nexport const apexDonutCharts = {\n    series: [44, 55, 41, 17, 15],\n    options: {\n      chart: {\n        type: 'donut',\n      },\n      colors:[primary, secondary, '#51bb25', '#544fff', '#fb740d'],\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 300\n          },\n          legend: {\n            position: 'bottom'\n          }\n        }\n      }]\n    },\n}\n\nexport const apexMixedCharts = {\n    series: [{\n        name: 'Column',\n        type: 'column',\n        data: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30]\n      }, {\n        name: 'Area',\n        type: 'area',\n        data: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43]\n      }, {\n        name: 'Line',\n        type: 'line',\n        data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]\n      }],\n      options: {\n        chart: {\n          height: 350,\n          type: 'line',\n          stacked: false,\n        },\n        stroke: {\n          width: [0, 2, 5],\n          curve: 'smooth'\n        },\n        plotOptions: {\n          bar: {\n            columnWidth: '50%'\n          }\n        },\n        \n        fill: {\n          opacity: [0.85, 0.25, 1],\n          gradient: {\n            inverseColors: false,\n            shade: 'light',\n            type: \"vertical\",\n            opacityFrom: 0.85,\n            opacityTo: 0.55,\n            stops: [0, 100, 100, 100]\n          }\n        },\n        labels: ['01/01/2003', '02/01/2003', '03/01/2003', '04/01/2003', '05/01/2003', '06/01/2003', '07/01/2003',\n          '08/01/2003', '09/01/2003', '10/01/2003', '11/01/2003'\n        ],\n        markers: {\n          size: 0\n        },\n        xaxis: {\n          type: 'datetime'\n        },\n        colors:[primary,'#51bb25',secondary],\n        yaxis: {\n          title: {\n            text: 'Points',\n          },\n          min: 0\n        },\n        tooltip: {\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function (y) {\n              if (typeof y !== \"undefined\") {\n                return y.toFixed(0) + \" points\";\n              }\n              return y;\n        \n            }\n          }\n        }\n      },\n\n}\nexport const apexBarChart = {\n    series: [{\n    data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380]\n  }],\n  options: {\n    chart: {\n      type: 'bar',\n      height: 350\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors:[primary],\n    xaxis: {\n      categories: ['South Korea', 'Canada', 'United Kingdom', 'Netherlands', 'Italy', 'France', 'Japan',\n        'United States', 'China', 'Germany'\n      ],\n    }\n  },\n\n\n};\n\n"]},"metadata":{},"sourceType":"module"}