{"ast":null,"code":"var _jsxFileName = \"/home/sonali/Downloads/react/theme/src/pages/comingSoon/countdownData.jsx\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Countdown from 'react-countdown';\n\nconst CountdownData = props => {\n  // eslint-disable-next-line\n  const [style, setStyle] = useState();\n  useEffect(() => {\n    setTimeout(function () {\n      setStyle({\n        style: {\n          display: 'none'\n        }\n      });\n    }, 1000);\n  }, []);\n\n  const Completionist = () => /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 33\n    }\n  }, \"You are good to go!\");\n\n  const renderer = ({\n    total,\n    days,\n    hours,\n    minutes,\n    seconds,\n    milliseconds,\n    completed\n  }) => {\n    if (completed) {\n      return /*#__PURE__*/React.createElement(Completionist, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"days\",\n        className: \"time digits\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }\n      }, days), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }, \"days\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"time digits\",\n        id: \"hours\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }\n      }, hours), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }, \"Hours\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"time digits\",\n        id: \"minutes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, minutes), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, \"Minutes\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"time digits\",\n        id: \"seconds\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, seconds), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, \"Seconds\"))));\n    }\n  };\n\n  var d = new Date();\n  var year = d.getFullYear();\n  var month = d.getMonth();\n  var day = d.getDate();\n  var coundown = new Date(year, month, day + 10).getTime();\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Countdown, {\n    date: coundown,\n    renderer: renderer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 14\n    }\n  }));\n};\n\nexport default CountdownData;","map":{"version":3,"sources":["/home/sonali/Downloads/react/theme/src/pages/comingSoon/countdownData.jsx"],"names":["React","Fragment","useState","useEffect","Countdown","CountdownData","props","style","setStyle","setTimeout","display","Completionist","renderer","total","days","hours","minutes","seconds","milliseconds","completed","d","Date","year","getFullYear","month","getMonth","day","getDate","coundown","getTime"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAoD,OAApD;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAY;AAC9B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,UAAU,CAAC,YAAY;AACnBD,MAAAA,QAAQ,CAAC;AAACD,QAAAA,KAAK,EAAE;AAACG,UAAAA,OAAO,EAAC;AAAT;AAAR,OAAD,CAAR;AACH,KAFS,EAER,IAFQ,CAAV;AAGH,GAJQ,EAIP,EAJO,CAAT;;AAKA,QAAMC,aAAa,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,qBAAP,CAA5B;;AAEA,QAAMC,QAAQ,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA,OAA/B;AAAwCC,IAAAA,YAAxC;AAAsDC,IAAAA;AAAtD,GAAD,KAAuE;AACpF,QAAIA,SAAJ,EAAe;AACX,0BAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEO;AACH,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,EAAE,EAAC,MAAT;AAAgB,QAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyCL,IAAzC,CADJ,eAEI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,MAAzB,CAFJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,EAAE,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0CC,KAA1C,CADJ,eAEI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,OAAzB,CAFJ,CALJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,EAAE,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4CC,OAA5C,CADJ,eAEI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,SAAzB,CAFJ,CATJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,EAAE,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4CC,OAA5C,CADJ,eAEI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,SAAzB,CAFJ,CAbJ,CADO,CAAP;AAoBH;AACJ,GAzBD;;AA2BA,MAAIG,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACA,MAAIC,IAAI,GAAGF,CAAC,CAACG,WAAF,EAAX;AACA,MAAIC,KAAK,GAAGJ,CAAC,CAACK,QAAF,EAAZ;AACA,MAAIC,GAAG,GAAGN,CAAC,CAACO,OAAF,EAAV;AACA,MAAIC,QAAQ,GAAG,IAAIP,IAAJ,CAASC,IAAT,EAAgBE,KAAhB,EAAuBE,GAAG,GAAC,EAA3B,EAA+BG,OAA/B,EAAf;AAEA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAED,QAAjB;AAA2B,IAAA,QAAQ,EAAEhB,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CADJ;AAKH,CAhDD;;AAkDA,eAAeP,aAAf","sourcesContent":["import React, { Fragment ,useState ,useEffect} from 'react';\nimport Countdown from 'react-countdown';\n\n\nconst CountdownData = (props) =>  {\n    // eslint-disable-next-line\n    const [style, setStyle] = useState();\n    useEffect(() => {\n        setTimeout(function () {\n            setStyle({style: {display:'none'}});\n        },1000)        \n    },[]);\n    const Completionist = () => <span>{\"You are good to go!\"}</span>;\n\n    const renderer = ({ total, days, hours, minutes, seconds, milliseconds, completed }) => {\n        if (completed) {\n            return <Completionist />;\n        } else {\n            return <div>\n            <ul>\n                <li>\n                    <span id=\"days\" className=\"time digits\">{days}</span>\n                    <span className=\"title\">{\"days\"}</span>\n                </li>\n                <li>\n                    <span className=\"time digits\" id=\"hours\">{hours}</span>\n                    <span className=\"title\">{\"Hours\"}</span>\n                </li>\n                <li>\n                    <span className=\"time digits\" id=\"minutes\">{minutes}</span>\n                    <span className=\"title\">{\"Minutes\"}</span>\n                </li>\n                <li>\n                    <span className=\"time digits\" id=\"seconds\">{seconds}</span>\n                    <span className=\"title\">{\"Seconds\"}</span>\n                </li>\n            </ul>\n            </div>\n        }\n    };\n\n    var d = new Date();\n    var year = d.getFullYear();\n    var month = d.getMonth();\n    var day = d.getDate();\n    var coundown = new Date(year , month, day+10).getTime();\n\n    return (\n        <Fragment>\n             <Countdown date={coundown} renderer={renderer} />\n        </Fragment>\n    );\n}\n\nexport default CountdownData;"]},"metadata":{},"sourceType":"module"}