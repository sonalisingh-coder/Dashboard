{"ast":null,"code":"var _jsxFileName = \"/home/sonali/Downloads/react/theme/src/data/csvFileRead.jsx\";\nimport React, { Component } from 'react';\nimport { CSVReader } from 'react-papaparse';\nimport TicketTable from \"../components/ticket-classification\";\nconst buttonRef = React.createRef();\nexport default class CSVReader1 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.TableData = [];\n\n    this.handleOpenDialog = e => {\n      // Note that the ref is set async, so it might be null at some point\n      if (buttonRef.current) {\n        buttonRef.current.open(e);\n      }\n    };\n\n    this.handleOnFileLoad = data => {\n      this.TableData = data;\n      console.log('---------------------------');\n      console.log(data);\n      console.log('---------------------------');\n    };\n\n    this.handleOnError = (err, file, inputElem, reason) => {\n      console.log('---------------------------');\n      console.log(err);\n      console.log('---------------------------');\n    };\n\n    this.handleOnRemoveFile = data => {\n      console.log('---------------------------');\n      console.log(data);\n      console.log('---------------------------');\n    };\n\n    this.handleRemoveFile = e => {\n      // Note that the ref is set async, so it might be null at some point\n      if (buttonRef.current) {\n        buttonRef.current.removeFile(e);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Basic Upload\"), /*#__PURE__*/React.createElement(CSVReader, {\n      ref: buttonRef,\n      onFileLoad: this.handleOnFileLoad,\n      onError: this.handleOnError,\n      noClick: true,\n      noDrag: true,\n      onRemoveFile: this.handleOnRemoveFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, ({\n      file\n    }) => /*#__PURE__*/React.createElement(\"aside\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginBottom: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleOpenDialog,\n      style: {\n        borderRadius: 0,\n        marginLeft: 0,\n        marginRight: 0,\n        width: '40%',\n        paddingLeft: 0,\n        paddingRight: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, \"Browse file\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        borderWidth: 1,\n        borderStyle: 'solid',\n        borderColor: '#ccc',\n        height: 45,\n        lineHeight: 2.5,\n        marginTop: 5,\n        marginBottom: 5,\n        paddingLeft: 13,\n        paddingTop: 3,\n        width: '60%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, file && file.name), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        borderRadius: 0,\n        marginLeft: 0,\n        marginRight: 0,\n        paddingLeft: 20,\n        paddingRight: 20\n      },\n      onClick: this.handleRemoveFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, \"Remove\"))), /*#__PURE__*/React.createElement(TicketTable, {\n      data: this.TableData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/sonali/Downloads/react/theme/src/data/csvFileRead.jsx"],"names":["React","Component","CSVReader","TicketTable","buttonRef","createRef","CSVReader1","TableData","handleOpenDialog","e","current","open","handleOnFileLoad","data","console","log","handleOnError","err","file","inputElem","reason","handleOnRemoveFile","handleRemoveFile","removeFile","render","display","flexDirection","marginBottom","borderRadius","marginLeft","marginRight","width","paddingLeft","paddingRight","borderWidth","borderStyle","borderColor","height","lineHeight","marginTop","paddingTop","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { CSVReader } from 'react-papaparse';\nimport TicketTable from \"../components/ticket-classification\";\nconst buttonRef = React.createRef();\n\nexport default class CSVReader1 extends Component {\n\n  TableData = [];\n  handleOpenDialog = (e) => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.open(e);\n    }\n  };\n\n  handleOnFileLoad = (data) => {\n   this.TableData = data;\n    console.log('---------------------------');\n    console.log(data);\n   \n    console.log('---------------------------');\n  };\n\n  handleOnError = (err, file, inputElem, reason) => {\n    console.log('---------------------------');\n    console.log(err);\n    console.log('---------------------------');\n  };\n\n  handleOnRemoveFile = (data) => {\n    console.log('---------------------------');\n    console.log(data);\n    console.log('---------------------------');\n  };\n\n  handleRemoveFile = (e) => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e);\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <h5>Basic Upload</h5>\n        <CSVReader\n          ref={buttonRef}\n          onFileLoad={this.handleOnFileLoad}\n          onError={this.handleOnError}\n          noClick\n          noDrag\n          onRemoveFile={this.handleOnRemoveFile}\n        >\n          {({ file }) => (\n            <aside\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                marginBottom: 10,\n              }}\n            >\n              <button\n                type=\"button\"\n                onClick={this.handleOpenDialog}\n                style={{\n                  borderRadius: 0,\n                  marginLeft: 0,\n                  marginRight: 0,\n                  width: '40%',\n                  paddingLeft: 0,\n                  paddingRight: 0,\n                }}\n              >\n                Browse file\n              </button>\n              <div\n                style={{\n                  borderWidth: 1,\n                  borderStyle: 'solid',\n                  borderColor: '#ccc',\n                  height: 45,\n                  lineHeight: 2.5,\n                  marginTop: 5,\n                  marginBottom: 5,\n                  paddingLeft: 13,\n                  paddingTop: 3,\n                  width: '60%',\n                }}\n              >\n                {file && file.name}\n              </div>\n              <button\n                style={{\n                  borderRadius: 0,\n                  marginLeft: 0,\n                  marginRight: 0,\n                  paddingLeft: 20,\n                  paddingRight: 20,\n                }}\n                onClick={this.handleRemoveFile}\n              >\n                Remove\n              </button>\n            </aside>\n          )}\n        </CSVReader>\n        <TicketTable data={this.TableData} />\n\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}