{"ast":null,"code":"var _jsxFileName = \"/home/sonali/Downloads/react/theme/src/components/calendar/draggableCalendar.jsx\";\nimport React, { useEffect, Fragment, useState } from \"react\";\nimport Breadcrumb from '../../layout/breadcrumb';\nimport { Container, Row, Col, Card, CardHeader, CardBody } from 'reactstrap';\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport { Dragging_Event } from \"../../constant\";\n\nconst DraggableCalendar = () => {\n  const initialstate = {\n    calendarEvents: [{\n      title: \"Atlanta Monster\",\n      start: new Date(\"2019-04-04 00:00\"),\n      id: \"1001\"\n    }, {\n      title: \"My Favorite Murder\",\n      start: new Date(\"2019-04-05 00:00\"),\n      id: \"1002\"\n    }],\n    events: [{\n      title: \"Meeting\",\n      id: \"1\"\n    }, {\n      title: \"Party\",\n      id: \"2\"\n    }, {\n      title: \"Long Event\",\n      id: \"3\"\n    }, {\n      title: \"Lunch\",\n      id: \"4\"\n    }, {\n      title: \"Happy Hour\",\n      id: \"5\"\n    }]\n  }; // eslint-disable-next-line\n\n  const [state, setState] = useState(initialstate);\n  useEffect(() => {\n    let draggableEl = document.getElementById(\"external-events\");\n    new Draggable(draggableEl, {\n      itemSelector: \".fc-event\",\n      eventData: function (eventEl) {\n        let title = eventEl.getAttribute(\"title\");\n        let id = eventEl.getAttribute(\"data\");\n        return {\n          title: title,\n          id: id\n        };\n      }\n    });\n  }, []);\n\n  const eventClick = eventClick => {\n    Swal.fire({\n      title: eventClick.event.title,\n      html: `<div class=\"table-responsive\">\n                <table class=\"table\">\n                <tbody>\n                <tr >\n                <td>Title</td>\n                <td><strong>` + eventClick.event.title + `</strong></td>\n                </tr>\n                <tr >\n                <td>Start Time</td>\n                <td><strong>\n                ` + eventClick.event.start + `\n                </strong></td>\n                </tr>\n                </tbody>\n                </table>\n                </div>`,\n      showCancelButton: true,\n      confirmButtonColor: \"#d33\",\n      cancelButtonColor: \"#3085d6\",\n      confirmButtonText: \"Remove Event\",\n      cancelButtonText: \"Close\"\n    }).then(result => {\n      if (result.value) {\n        eventClick.event.remove();\n        Swal.fire(\"Deleted!\", \"Your Event has been deleted.\", \"success\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Calendar\",\n    title: \"Draggable Calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }\n  }, Dragging_Event)), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"basic-calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: 3,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"external-events\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 57\n    }\n  }, \" \", \"Events\")), state.events.map(event => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fc-event\",\n    title: event.title,\n    data: event.id,\n    key: event.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 57\n    }\n  }, event.title)))), /*#__PURE__*/React.createElement(Col, {\n    xl: 9,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"demo-app-calendar\",\n    id: \"mycalendartest\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FullCalendar, {\n    defaultView: \"dayGridMonth\",\n    header: {\n      left: \"prev,next today\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n    },\n    rerenderDelay: 10,\n    eventDurationEditable: false,\n    editable: true,\n    droppable: true,\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    weekends: state.calendarWeekends,\n    events: state.calendarEvents,\n    eventClick: eventClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 53\n    }\n  })))))))))));\n};\n\nexport default DraggableCalendar;","map":{"version":3,"sources":["/home/sonali/Downloads/react/theme/src/components/calendar/draggableCalendar.jsx"],"names":["React","useEffect","Fragment","useState","Breadcrumb","Container","Row","Col","Card","CardHeader","CardBody","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Draggable","Swal","Dragging_Event","DraggableCalendar","initialstate","calendarEvents","title","start","Date","id","events","state","setState","draggableEl","document","getElementById","itemSelector","eventData","eventEl","getAttribute","eventClick","fire","event","html","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","remove","map","left","center","right","calendarWeekends"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment, useState } from \"react\";\nimport Breadcrumb from '../../layout/breadcrumb'\nimport {Container,Row,Col,Card,CardHeader,CardBody} from 'reactstrap'\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\nimport { Dragging_Event } from \"../../constant\";\n\nconst DraggableCalendar = () => {\n    const initialstate = {\n        calendarEvents: [\n            {\n                title: \"Atlanta Monster\",\n                start: new Date(\"2019-04-04 00:00\"),\n                id: \"1001\"\n            },\n            {\n                title: \"My Favorite Murder\",\n                start: new Date(\"2019-04-05 00:00\"),\n                id: \"1002\"\n            }\n        ],\n        events: [\n            { title: \"Meeting\", id: \"1\" },\n            { title: \"Party\", id: \"2\" },\n            { title: \"Long Event\", id: \"3\" },\n            { title: \"Lunch\", id: \"4\" },\n            { title: \"Happy Hour\", id: \"5\" }\n        ]\n\n    }\n    // eslint-disable-next-line\n    const [state,setState] = useState(initialstate)\n    \n\n    useEffect(() => {\n        let draggableEl = document.getElementById(\"external-events\");\n        new Draggable(draggableEl, {\n            itemSelector: \".fc-event\",\n            eventData: function (eventEl) {\n                let title = eventEl.getAttribute(\"title\");\n                let id = eventEl.getAttribute(\"data\");\n                return {\n                    title: title,\n                    id: id\n                };\n            }\n        });\n      },[]);\n\n   const eventClick = (eventClick) => {\n        Swal.fire({\n            title: eventClick.event.title,\n            html:\n                `<div class=\"table-responsive\">\n                <table class=\"table\">\n                <tbody>\n                <tr >\n                <td>Title</td>\n                <td><strong>` +\n                eventClick.event.title +\n                `</strong></td>\n                </tr>\n                <tr >\n                <td>Start Time</td>\n                <td><strong>\n                ` +\n                eventClick.event.start +\n                `\n                </strong></td>\n                </tr>\n                </tbody>\n                </table>\n                </div>`,\n\n                showCancelButton: true,\n                confirmButtonColor: \"#d33\",\n                cancelButtonColor: \"#3085d6\",\n                confirmButtonText: \"Remove Event\",\n                cancelButtonText: \"Close\"\n        }).then(result => {\n            if (result.value) {\n                eventClick.event.remove();\n                Swal.fire(\"Deleted!\", \"Your Event has been deleted.\", \"success\");\n            }\n        });\n    };\n        return (\n            <Fragment>\n                <Breadcrumb parent=\"Calendar\" title=\"Draggable Calendar\"/>\n                <Container fluid={true}>\n                    <Row>\n                        <Col sm=\"12\">\n                            <Card>\n                                <CardHeader>\n                                    <h5>{Dragging_Event}</h5>\n                                </CardHeader>\n                                <CardBody>\n                                    <div className=\"basic-calendar\">\n                                        <Row>\n                                            <Col xl={3} md={4}>\n                                                <div\n                                                    id=\"external-events\"\n                                                >\n                                                    <p align=\"center\">\n                                                        <strong> {\"Events\"}</strong>\n                                                    </p>\n                                                    {state.events.map(event => (\n                                                        <div\n                                                            className=\"fc-event\"\n                                                            title={event.title}\n                                                            data={event.id}\n                                                            key={event.id}\n                                                        >\n                                                            {event.title}\n                                                        </div>\n                                                    ))}\n                                                </div>\n                                            </Col>\n                                            <Col xl={9} md={8}>\n                                                <div className=\"demo-app-calendar\" id=\"mycalendartest\">\n                                                    <FullCalendar\n                                                        defaultView=\"dayGridMonth\"\n                                                        header={{\n                                                            left: \"prev,next today\",\n                                                            center: \"title\",\n                                                            right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n                                                        }}\n                                                        rerenderDelay={10}\n                                                        eventDurationEditable={false}\n                                                        editable={true}\n                                                        droppable={true}\n                                                        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                                                        weekends={state.calendarWeekends}\n                                                        events={state.calendarEvents}\n                                                        eventClick={eventClick}\n                                                    />\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </Fragment>\n\n\n        );\n    }\n\nexport default DraggableCalendar;\n"]},"metadata":{},"sourceType":"module"}