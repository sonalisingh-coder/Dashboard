{"ast":null,"code":"var _jsxFileName = \"/home/sonali/Downloads/react/theme/src/components/support-ticket/index.jsx\";\nimport React, { Fragment, useState } from 'react';\nimport Breadcrumb from '../../layout/breadcrumb';\nimport ReactFileReader from 'react-file-reader';\nimport { CsvToHtmlTable } from 'react-csv-to-table';\nimport Papa from 'papaparse';\nimport { Container, Row, Col, Card, CardHeader, CardBody } from 'reactstrap';\nimport DataTable from 'react-data-table-component';\nimport { productData, productColumns } from '../../data/product-list';\nimport csvFile from \"./ticket_classi_pred.csv\";\nconst sampleData = `\nChrysler Imperial,14.7,8,440,230,3.23,5.345,17.42,0,0,3,4\nFiat 128,32.4,4,78.7,66,4.08,2.2,19.47,1,1,4,1\n`;\nlet csvData = null;\nPapa.parse(csvFile, {\n  download: true,\n  complete: function (input) {\n    const records = input.data;\n  },\n  step: function (row) {\n    csvData = row.data;\n    console.log(row.data);\n  }\n});\n\nclass Productlist extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      csvData: null\n    };\n\n    this.handleFiles = files => {\n      var reader = new FileReader();\n\n      reader.onload = e => {\n        // Use reader.result\n        this.setState({\n          csvData: reader.result\n        });\n      };\n\n      console.log(files);\n      reader.readAsText(files);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(ReactFileReader, {\n      multipleFiles: false,\n      fileTypes: [\".csv\"],\n      handleFiles: this.handleFiles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Upload\")), /*#__PURE__*/React.createElement(CsvToHtmlTable, {\n      data: this.state.csvData || sampleData,\n      csvDelimiter: \",\",\n      tableClassName: \"table table-striped table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Breadcrumb, {\n      parent: \"ECommerce\",\n      title: \"Product List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, \"ProductListTitle\", \" \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 49\n      }\n    }, \"ProductListDesc\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive product-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      noHeader: true,\n      columns: productColumns,\n      data: csvData,\n      pagination: true,\n      highlightOnHover: true,\n      persistTableHead: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }\n    }))))))));\n  } //   fs.readFile(tableData, 'utf8', function (err, data) {\n  //     if (err) {\n  //         throw err;\n  //     }\n  //     Papa.parse(data, {\n  //      step: function (row) {\n  //       console.log(\"Row:\", row.data);\n  //      }\n  //    });\n  // });\n\n\n} // const Productlist = (data) => {\n//   const [csvData , setCsvData] = useState({});\n//   const handleFiles = files => {\n//     var reader = new FileReader();\n//     reader.onload = () => {\n//         // Use reader.result\n//         setCsvData({\n//           csvData: reader.result\n//         })\n//       }\n//       reader.readAsText(files[0]);\n// }\n//     return (\n//   <Fragment>\n//   <Breadcrumb parent=\"ECommerce\" title=\"Product List\"/>\n//   <Container fluid={true}>\n//     <Row>\n//         <Col sm=\"12\">\n//             <Card>\n//                 <CardHeader>\n//                     <h5>{\"ProductListTitle\"} </h5><span>{\"ProductListDesc\"}</span>\n//                 </CardHeader>\n//                 <CardBody>\n//                     <div className=\"table-responsive product-table\">\n//                         <DataTable\n//                             noHeader\n//                             columns={productColumns}\n//                             data={productData}\n//                             pagination\n//                             highlightOnHover\n//                             persistTableHead\n//                         />\n//                     </div>\n//                 </CardBody>\n//             </Card>\n//         </Col>\n//     </Row>\n//    </Container>\n//    </Fragment>\n//     )\n//   }\n\n\nexport default Productlist;","map":{"version":3,"sources":["/home/sonali/Downloads/react/theme/src/components/support-ticket/index.jsx"],"names":["React","Fragment","useState","Breadcrumb","ReactFileReader","CsvToHtmlTable","Papa","Container","Row","Col","Card","CardHeader","CardBody","DataTable","productData","productColumns","csvFile","sampleData","csvData","parse","download","complete","input","records","data","step","row","console","log","Productlist","Component","state","handleFiles","files","reader","FileReader","onload","e","setState","result","readAsText","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,SAAR,EAAkBC,GAAlB,EAAsBC,GAAtB,EAA0BC,IAA1B,EAA+BC,UAA/B,EAA0CC,QAA1C,QAAyD,YAAzD;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAAQC,WAAR,EAAoBC,cAApB,QAAyC,yBAAzC;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,MAAMC,UAAU,GAAI;AACpB;AACA;AACA,CAHA;AAKA,IAAIC,OAAO,GAAE,IAAb;AACAZ,IAAI,CAACa,KAAL,CAAWH,OAAX,EAAoB;AAChBI,EAAAA,QAAQ,EAAE,IADM;AAEhBC,EAAAA,QAAQ,EAAE,UAAUC,KAAV,EAAiB;AACtB,UAAMC,OAAO,GAAGD,KAAK,CAACE,IAAtB;AACJ,GAJe;AAKhBC,EAAAA,IAAI,EAAE,UAAUC,GAAV,EAAe;AACZR,IAAAA,OAAO,GAACQ,GAAG,CAACF,IAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACF,IAAhB;AACC;AARM,CAApB;;AAWA,MAAMK,WAAN,SAA0B7B,KAAK,CAAC8B,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAClC;AACJb,MAAAA,OAAO,EAAE;AADL,KADkC;;AAAA,SAqExCc,WArEwC,GAqE1BC,KAAK,IAAI;AACrB,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAkBC,CAAD,IAAO;AACtB;AACA,aAAKC,QAAL,CAAc;AACZpB,UAAAA,OAAO,EAAEgB,MAAM,CAACK;AADJ,SAAd;AAGD,OALD;;AAMAZ,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACAC,MAAAA,MAAM,CAACM,UAAP,CAAkBP,KAAlB;AACD,KA/EuC;AAAA;;AAMxCQ,EAAAA,MAAM,GAAE;AACN,wBAAS,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACP,oBAAC,eAAD;AACE,MAAA,aAAa,EAAE,KADjB;AAEE,MAAA,SAAS,EAAE,CAAC,MAAD,CAFb;AAIA,MAAA,WAAW,EAAE,KAAKT,WAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADO,eAWP,oBAAC,cAAD;AACE,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWb,OAAX,IAAsBD,UAD9B;AAEE,MAAA,YAAY,EAAC,GAFf;AAGE,MAAA,cAAc,EAAC,iCAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXO,eAmBb,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAC,WAAnB;AAA+B,MAAA,KAAK,EAAC,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBa,eAoBb,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,kBAAL,MADJ,eACkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,iBAAP,CADlC,CADJ,eAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,OAAO,EAAEF,cAFb;AAGI,MAAA,IAAI,EAAEG,OAHV;AAII,MAAA,UAAU,MAJd;AAKI,MAAA,gBAAgB,MALpB;AAMI,MAAA,gBAAgB,MANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAJJ,CADJ,CADJ,CAJF,CApBa,CAAT;AAgDD,GAvDuC,CAyD1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAlE0C,C,CAkF1C;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACQ;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAER;AAEA;;;AAIA,eAAeW,WAAf","sourcesContent":["import React, { Fragment , useState} from 'react';\nimport Breadcrumb from '../../layout/breadcrumb'\nimport ReactFileReader from 'react-file-reader';\nimport { CsvToHtmlTable } from 'react-csv-to-table';\nimport Papa from 'papaparse';\nimport {Container,Row,Col,Card,CardHeader,CardBody} from 'reactstrap'\nimport DataTable from 'react-data-table-component';\nimport {productData,productColumns} from '../../data/product-list'\nimport csvFile from \"./ticket_classi_pred.csv\"\n\nconst sampleData = `\nChrysler Imperial,14.7,8,440,230,3.23,5.345,17.42,0,0,3,4\nFiat 128,32.4,4,78.7,66,4.08,2.2,19.47,1,1,4,1\n`;\n\nlet csvData= null;\nPapa.parse(csvFile, {\n    download: true,\n    complete: function (input) {\n         const records = input.data;\n    },\n    step: function (row) {\n             csvData=row.data;\n             console.log(row.data);\n             }\n});\n\nclass Productlist extends React.Component {\n  state={\n    csvData: null\n  };\n  \n\n  render(){\n    return   <Fragment>\n      <ReactFileReader \n        multipleFiles={false}\n        fileTypes={[\".csv\"]} \n        \n      handleFiles={this.handleFiles}>\n        <button className='btn'>Upload</button>\n      </ReactFileReader>\n\n     \n      \n      <CsvToHtmlTable\n        data={this.state.csvData || sampleData}\n        csvDelimiter=\",\"\n        tableClassName=\"table table-striped table-hover\"\n      />\n    \n\n\n<Breadcrumb parent=\"ECommerce\" title=\"Product List\"/>\n<Container fluid={true}>\n\n\n\n  <Row>\n      <Col sm=\"12\">\n          <Card>\n              <CardHeader>\n                  <h5>{\"ProductListTitle\"} </h5><span>{\"ProductListDesc\"}</span>\n              </CardHeader>\n              <CardBody>\n                  <div className=\"table-responsive product-table\">\n                      <DataTable\n                          noHeader\n                          columns={productColumns}\n                          data={csvData}\n                          pagination\n                          highlightOnHover\n                          persistTableHead\n                      />\n                  </div>\n              </CardBody>\n          </Card>\n      </Col>\n  </Row>\n </Container>\n </Fragment>\n\n  } \n\n//   fs.readFile(tableData, 'utf8', function (err, data) {\n//     if (err) {\n//         throw err;\n//     }\n//     Papa.parse(data, {\n//      step: function (row) {\n//       console.log(\"Row:\", row.data);\n//      }\n//    });\n// });\n\n\n  handleFiles = files => {\n    var reader = new FileReader();\n    reader.onload =  (e) => {\n      // Use reader.result\n      this.setState({\n        csvData: reader.result\n      })\n    }\n    console.log(files)\n    reader.readAsText(files);\n  }\n\n}\n// const Productlist = (data) => {\n//   const [csvData , setCsvData] = useState({});\n\n//   const handleFiles = files => {\n//     var reader = new FileReader();\n//     reader.onload = () => {\n//         // Use reader.result\n//         setCsvData({\n//           csvData: reader.result\n//         })\n//       }\n//       reader.readAsText(files[0]);\n// }\n\n//     return (\n        //   <Fragment>\n        //   <Breadcrumb parent=\"ECommerce\" title=\"Product List\"/>\n        //   <Container fluid={true}>\n\n        \n\n        //     <Row>\n        //         <Col sm=\"12\">\n        //             <Card>\n        //                 <CardHeader>\n        //                     <h5>{\"ProductListTitle\"} </h5><span>{\"ProductListDesc\"}</span>\n        //                 </CardHeader>\n        //                 <CardBody>\n        //                     <div className=\"table-responsive product-table\">\n        //                         <DataTable\n        //                             noHeader\n        //                             columns={productColumns}\n        //                             data={productData}\n        //                             pagination\n        //                             highlightOnHover\n        //                             persistTableHead\n        //                         />\n        //                     </div>\n        //                 </CardBody>\n        //             </Card>\n        //         </Col>\n        //     </Row>\n        //    </Container>\n        //    </Fragment>\n           \n//     )\n\n//   }\n\n\n\nexport default Productlist\n\n\n"]},"metadata":{},"sourceType":"module"}