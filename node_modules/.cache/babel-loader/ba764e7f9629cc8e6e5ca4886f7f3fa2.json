{"ast":null,"code":"var _jsxFileName = \"/home/sonali/Downloads/react/theme/src/components/tables/dataTable.jsx\";\nimport React, { Fragment, useState, useCallback, useMemo } from 'react';\nimport Breadcrumb from '../../layout/breadcrumb';\nimport differenceBy from 'lodash/differenceBy';\nimport { toast } from 'react-toastify';\nimport DataTable from 'react-data-table-component';\nimport { tableData } from '../../data/dummyTableData';\nimport { Container, Row, Col, Card, CardHeader, CardBody } from 'reactstrap';\n\nconst DataTables = () => {\n  const [data, setData] = useState(tableData);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [toggleCleared, setToggleCleared] = useState(false);\n  const tableColumns = [{\n    name: 'ID',\n    selector: 'id',\n    sortable: true,\n    center: true\n  }, {\n    name: 'Name',\n    selector: 'name',\n    sortable: true,\n    center: true\n  }, {\n    name: 'Status',\n    selector: 'status',\n    sortable: true,\n    center: true\n  }, {\n    name: 'Creat_on',\n    selector: 'creat_on',\n    sortable: true,\n    center: true\n  }];\n  const handleRowSelected = useCallback(state => {\n    setSelectedRows(state.selectedRows);\n  }, []);\n  let contextActions = useMemo(() => {\n    const handleDelete = () => {\n      if (window.confirm(`Are you sure you want to delete:\\r ${selectedRows.map(r => r.name)}?`)) {\n        setToggleCleared(!toggleCleared);\n        setData(differenceBy(data, selectedRows, 'name'));\n        toast.success(\"Successfully Deleted !\");\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: \"delete\",\n      className: \"btn btn-danger\",\n      onClick: handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }\n    }, \"Delete\");\n  }, [data, selectedRows, toggleCleared]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Table\",\n    title: \"Data Tables\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, \"Select Multiple and Delete Single Data\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    data: data,\n    columns: tableColumns,\n    striped: true,\n    center: true,\n    selectableRows: true,\n    persistTableHead: true,\n    contextActions: contextActions,\n    onSelectedRowsChange: handleRowSelected,\n    clearSelectedRows: toggleCleared,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 31\n    }\n  })))))));\n};\n\nexport default DataTables;","map":{"version":3,"sources":["/home/sonali/Downloads/react/theme/src/components/tables/dataTable.jsx"],"names":["React","Fragment","useState","useCallback","useMemo","Breadcrumb","differenceBy","toast","DataTable","tableData","Container","Row","Col","Card","CardHeader","CardBody","DataTables","data","setData","selectedRows","setSelectedRows","toggleCleared","setToggleCleared","tableColumns","name","selector","sortable","center","handleRowSelected","state","contextActions","handleDelete","window","confirm","map","r","success"],"mappings":"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","sourcesContent":["import React, { Fragment,useState,useCallback,useMemo} from 'react';\nimport Breadcrumb from '../../layout/breadcrumb'\nimport differenceBy from 'lodash/differenceBy';\nimport { toast } from 'react-toastify';\nimport DataTable from 'react-data-table-component'\nimport {tableData} from '../../data/dummyTableData'\nimport { Container,Row,Col,Card,CardHeader,CardBody} from 'reactstrap';\n\nconst DataTables = () =>  {\n\n  const [data,setData] = useState(tableData)\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [toggleCleared, setToggleCleared] = useState(false);\n\n  const tableColumns = [\n    {\n        name: 'ID',\n        selector: 'id', \n        sortable: true,\n        center:true,\n    },\n    {\n        name: 'Name',\n        selector: 'name',\n        sortable: true,\n        center:true,\n    },\n    {\n        name: 'Status',\n        selector: 'status',\n        sortable: true,\n        center:true,\n    },\n    {\n        name: 'Creat_on',\n        selector: 'creat_on',\n        sortable: true,\n        center:true,\n    },\n  ]\n\n  \n  const handleRowSelected = useCallback(state => {\n      setSelectedRows(state.selectedRows);\n    }, []);\n\n    let contextActions = useMemo(() => {\n      const handleDelete = () => {\n        \n        if (window.confirm(`Are you sure you want to delete:\\r ${selectedRows.map(r => r.name)}?`)) {\n          setToggleCleared(!toggleCleared);\n          setData(differenceBy(data, selectedRows, 'name'));\n          toast.success(\"Successfully Deleted !\")\n        }\n      };\n  \n      return <button key=\"delete\" className=\"btn btn-danger\" onClick={handleDelete}>Delete</button>;\n    }, [data, selectedRows, toggleCleared]);\n\n    return (\n        <Fragment>\n        <Breadcrumb parent=\"Table\" title=\"Data Tables\"/>\n        <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <h5>{\"Select Multiple and Delete Single Data\"}</h5>\n                            </CardHeader>\n                            <CardBody>\n                              <DataTable\n                                data={data}\n                                columns={tableColumns}\n                                striped={true}\n                                center={true}\n                                selectableRows\n                                persistTableHead\n                                contextActions={contextActions}\n                                onSelectedRowsChange={handleRowSelected}\n                                clearSelectedRows={toggleCleared}\n                              />\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n\n};\n\nexport default DataTables;"]},"metadata":{},"sourceType":"module"}