{"ast":null,"code":"var _jsxFileName = \"/home/sonali/Downloads/react/theme/src/components/icons/themifyIcons.jsx\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Breadcrumb from '../../layout/breadcrumb';\nimport IconMarkUp from './Icon-markup';\nimport { Container, Row, Col, Card, CardHeader, CardBody } from 'reactstrap';\nimport axios from 'axios';\nimport { ArrowsDirection, WebApp, Control, TextEditor, Brand, Icons } from \"../../constant\";\n\nconst ThemifyIcons = () => {\n  const [data, setData] = useState([]);\n  const [iTag, setiTag] = useState('');\n  const [icon, setIcon] = useState('');\n  useEffect(() => {\n    axios.get(`${process.env.PUBLIC_URL}/api/themifyData.json`).then(res => setData(res.data));\n  }, []);\n\n  const getItag = tag => {\n    setiTag({\n      iTag: '<i className= \"' + tag + '\"></i>'\n    });\n    setIcon({\n      icon: '' + tag + ' fa-2x'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Icons\",\n    title: \"Themify Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, data.map((icons, index) => {\n    return /*#__PURE__*/React.createElement(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-b-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"digits\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 67\n      }\n    }, ArrowsDirection), \" \", Icons)), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"icon-lists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 45\n      }\n    }, icons.directional.map((icon, i) => {\n      return /*#__PURE__*/React.createElement(Col, {\n        sm: \"6\",\n        lg: \"4\",\n        key: i,\n        onClick: e => getItag(icon),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `${icon}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 61\n        }\n      }), \" \", icon);\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-b-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"digits\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 67\n      }\n    }, WebApp), \" \", Icons)), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"icon-lists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 45\n      }\n    }, icons.webapp.map((icon, i) => {\n      return /*#__PURE__*/React.createElement(Col, {\n        sm: \"6\",\n        lg: \"4\",\n        key: i,\n        onClick: e => getItag(icon),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `${icon}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 61\n        }\n      }), \" \", icon);\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-b-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"digits\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 67\n      }\n    }, Control), \" \", Icons)), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"icon-lists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 45\n      }\n    }, icons.control.map((icon, i) => {\n      return /*#__PURE__*/React.createElement(Col, {\n        sm: \"6\",\n        lg: \"4\",\n        key: i,\n        onClick: e => getItag(icon),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `${icon}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 61\n        }\n      }), \" \", icon);\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-b-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"digits\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 67\n      }\n    }, TextEditor), \" \", Icons)), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"icon-lists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 45\n      }\n    }, icons.texteditor.map((icon, i) => {\n      return /*#__PURE__*/React.createElement(Col, {\n        sm: \"6\",\n        lg: \"4\",\n        key: i,\n        onClick: e => getItag(icon),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `${icon}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 61\n        }\n      }), \" \", icon);\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-b-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"digits\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 67\n      }\n    }, Brand), \" \", Icons)), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"icon-lists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 45\n      }\n    }, icons.brand.map((icon, i) => {\n      return /*#__PURE__*/React.createElement(Col, {\n        sm: \"6\",\n        lg: \"4\",\n        key: i,\n        onClick: e => getItag(icon),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `${icon}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 61\n        }\n      }), \" \", icon);\n    }))))));\n  })), /*#__PURE__*/React.createElement(IconMarkUp, {\n    itag: iTag,\n    icons: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ThemifyIcons;","map":{"version":3,"sources":["/home/sonali/Downloads/react/theme/src/components/icons/themifyIcons.jsx"],"names":["React","Fragment","useState","useEffect","Breadcrumb","IconMarkUp","Container","Row","Col","Card","CardHeader","CardBody","axios","ArrowsDirection","WebApp","Control","TextEditor","Brand","Icons","ThemifyIcons","data","setData","iTag","setiTag","icon","setIcon","get","process","env","PUBLIC_URL","then","res","getItag","tag","map","icons","index","directional","i","e","webapp","control","texteditor","brand"],"mappings":"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","sourcesContent":["import React, { Fragment, useState,useEffect } from 'react';\nimport Breadcrumb from '../../layout/breadcrumb'\nimport IconMarkUp from './Icon-markup';\nimport {Container,Row,Col,Card,CardHeader,CardBody} from 'reactstrap'\nimport axios from 'axios'\nimport {ArrowsDirection,WebApp,Control,TextEditor,Brand,Icons} from \"../../constant\";\n\nconst ThemifyIcons = () => {\n\n    const [data,setData] = useState([])\n    const [iTag, setiTag] = useState('');\n    const [icon, setIcon] = useState('');\n\n    useEffect(() => {\n        axios.get(`${process.env.PUBLIC_URL}/api/themifyData.json`).then(res => setData(res.data))\n    },[])\n\n    \n    const getItag = (tag) => {\n        setiTag({\n            iTag: '<i className= \"' + tag + '\"></i>',\n        })\n        setIcon({\n            icon : '' + tag + ' fa-2x'\n        })\n    }\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Icons\" title=\"Themify Icon\"/>\n            <Container fluid={true}>\n                {\n                    data.map((icons, index) => {\n                        return (\n                            <Row key={index}>\n                                <Col sm=\"12\">\n                                    <Card>\n                                        <CardHeader>\n                                            <h5 className=\"m-b-0\"><span className=\"digits\">{ArrowsDirection}</span> {Icons}</h5>\n                                        </CardHeader>\n                                        <CardBody>\n                                            <Row className=\"icon-lists\">\n                                                {icons.directional.map((icon, i) => {\n                                                    return (\n                                                        <Col sm=\"6\" lg=\"4\" key={i} onClick={(e) => getItag(icon)}>\n                                                            <i className={`${icon}`}></i> {icon}\n                                                        </Col>\n                                                    )\n                                                })\n                                                }\n                                            </Row>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                                <Col sm=\"12\">\n                                    <Card>\n                                        <CardHeader>\n                                            <h5 className=\"m-b-0\"><span className=\"digits\">{WebApp}</span> {Icons}</h5>\n                                        </CardHeader>\n                                        <CardBody>\n                                            <Row className=\"icon-lists\">\n                                                {icons.webapp.map((icon, i) => {\n                                                    return (\n                                                        <Col sm=\"6\" lg=\"4\" key={i} onClick={(e) => getItag(icon)}>\n                                                            <i className={`${icon}`}></i> {icon}\n                                                        </Col>\n                                                    )\n                                                })\n                                                }\n                                            </Row>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                                <Col sm=\"12\">\n                                    <Card>\n                                        <CardHeader>\n                                            <h5 className=\"m-b-0\"><span className=\"digits\">{Control}</span> {Icons}</h5>\n                                        </CardHeader>\n                                        <CardBody>\n                                            <Row className=\"icon-lists\">\n                                                {icons.control.map((icon, i) => {\n                                                    return (\n                                                        <Col sm=\"6\" lg=\"4\" key={i} onClick={(e) => getItag(icon)}>\n                                                            <i className={`${icon}`}></i> {icon}\n                                                        </Col>\n                                                    )\n                                                })\n                                                }\n                                            </Row>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                                <Col sm=\"12\">\n                                    <Card>\n                                        <CardHeader>\n                                            <h5 className=\"m-b-0\"><span className=\"digits\">{TextEditor}</span> {Icons}</h5>\n                                        </CardHeader>\n                                        <CardBody>\n                                            <Row className=\"icon-lists\">\n                                                {icons.texteditor.map((icon, i) => {\n                                                    return (\n                                                        <Col sm=\"6\" lg=\"4\" key={i} onClick={(e) => getItag(icon)}>\n                                                            <i className={`${icon}`}></i> {icon}\n                                                        </Col>\n                                                    )\n                                                })\n                                                }\n                                            </Row>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                                <Col sm=\"12\">\n                                    <Card>\n                                        <CardHeader>\n                                            <h5 className=\"m-b-0\"><span className=\"digits\">{Brand}</span> {Icons}</h5>\n                                        </CardHeader>\n                                        <CardBody>\n                                            <Row className=\"icon-lists\">\n                                                {icons.brand.map((icon, i) => {\n                                                    return (\n                                                        <Col sm=\"6\" lg=\"4\" key={i} onClick={(e) => getItag(icon)}>\n                                                            <i className={`${icon}`}></i> {icon}\n                                                        </Col>\n                                                    )\n                                                })\n                                                }\n                                            </Row>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            </Row>\n                        )\n                    })\n                }\n            </Container>\n            <IconMarkUp itag={iTag} icons={icon} />\n        </Fragment>\n    );\n};\n\nexport default ThemifyIcons;"]},"metadata":{},"sourceType":"module"}